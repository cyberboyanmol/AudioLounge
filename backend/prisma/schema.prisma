// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId          String          @id @unique @default(uuid())
  email           String          @unique
  name            String?
  avatar          String?
  googleId        String?         @map("google_id")
  activated       Boolean         @default(false)
  provider        Provider        @default(LOCAL)
  updatedAt       DateTime        @updatedAt @map(name: "updated_at")
  createdAt       DateTime        @default(now()) @map(name: "created_at")
  registeredRoom  EventRoom[]     @relation("UserInRoom")
  roomcreatedByme EventRoom[]
  SpeakerInRoom   SpeakerInRoom[]
  refreshTokens   Refresh[]
}

model EventRoom {
  eventId            String          @id @unique @default(uuid())
  topic              String
  description        String?
  roomType           RoomType        @default(SOCIAL)
  start_timing       DateTime
  created_At         DateTime        @default(now())
  updated_At         DateTime        @updatedAt
  creatorId          String?
  creator            User?           @relation(fields: [creatorId], references: [userId])
  participatedInRoom User[]          @relation("UserInRoom")
  SpeakerInRoom      SpeakerInRoom[]
}

model SpeakerInRoom {
  speaker     User      @relation(fields: [speakerId], references: [userId])
  speakerId   String
  eventroom   EventRoom @relation(fields: [eventroomId], references: [eventId])
  eventroomId String

  @@id([speakerId, eventroomId])
}

model Refresh {
  refreshId    String @id @unique @default(uuid())
  user         User   @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId       String
  refreshtoken String @unique

  @@index([userId])
}

enum RoomType {
  SOCIAL
  PUBLIC
  PRIVATE
}

enum Provider {
  LOCAL
  GOOGLE
}
